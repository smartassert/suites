# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    users_security_bundle_public_pattern: '^/(status)|(health-check)'
    users_security_bundle_secured_pattern: '^/'
    users_security_bundle_access_control_path: '^/'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    SmartAssert\YamlFile\Validator\YamlFilenameValidator: ~

    Psr\Http\Client\ClientInterface:
        class: GuzzleHttp\Client

    Psr\Http\Message\RequestFactoryInterface:
        class: GuzzleHttp\Psr7\HttpFactory

    SmartAssert\DoctrineInspectors\EntityMappingInspector:
        arguments:
            $entityClassNames:
                - 'App\Entity\Suite'

    SmartAssert\InvokableLogger\ExceptionLogger:

    SmartAssert\DoctrineInspectors\QueryInspector:

    SmartAssert\ServiceStatusInspector\ServiceStatusInspectorInterface:
        class: SmartAssert\ServiceStatusInspector\ServiceStatusInspector
        arguments:
            $componentInspectors:
                database_connection: '@SmartAssert\DoctrineInspectors\QueryInspector'
                database_entities: '@SmartAssert\DoctrineInspectors\EntityMappingInspector'
            $exceptionHandlers:
                - '@SmartAssert\InvokableLogger\ExceptionLogger'
